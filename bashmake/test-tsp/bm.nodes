(
                        (* define what files those bash functions generate *)  
 rules: (
   sbison: ".y .c .h"
   sflex: ".l .c .h"
   ccompile: ".c .o"
   
 )
                         (* instead of defining a node for each file *)
			 (* we can simply list files with know suffixes *)
			 (* and let bash-make generate the nodes for us *)
			 
 files:"njson_lex.l:njson_parse.h njson_parse.y mls.c njson_read.c bash-make.c conststr.c bash-make.c njson_parse.c njson_lex.c:njson_parse.h"

 files:"rule-expand.c:do-not-compile"


                         (* here we define a node the calls the function 'slink' *)

 nodes: (

(   OUT: ( 'bash-make' ), 
    IN: ( bash-make.o mls.o njson_read.o njson_lex.o njson_parse.o conststr.o  )
    REC: "slink"
)

 ) )

