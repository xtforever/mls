
[4]apply_named_rule: loop_count 1
[4]prepare_nodes: update nodes and cache
[4]find_nodes: todo node nr:0
[4]export_bash_command: starting 1 jobs
[4]export_bash_command: run make_b
[4]conststr_stats: Count: 24
[4]conststr_stats: Memory: 534
global_state='(nodes: (  ( OUT: ( "test1/b.test" ) ,REC:"run make_b",exit_code:"1",id:"1" ) , ( OUT: ( "test1/c.test" ) ,DEP: ( "test1/b.test" ) ,REC:"run make_c",exit_code:"1",id:"2" ) , ( DEP: ( "test1/b.test","test1/c.test" ) ,REC:"verify",exit_code:"1",id:"3" )  ) ,loop_count:"1")'
nr_jobs=1
IN=()
OUT=(test1/b.test )
run make_b
store-result 1 $?

exit_codes: 1 0
[4]main: error codes: 1
[4]main: error codes: 0
[4]apply_named_rule: loop_count 2
[4]prepare_nodes: update nodes and cache
[4]prepare_nodes: set exit code 0 on node 1
[4]find_nodes: todo node nr:1
[4]export_bash_command: starting 1 jobs
[4]export_bash_command: run make_c
[4]update_checksum_file: test1/b.test:Mon Jun  3 17:54:14 2024

[4]conststr_stats: Count: 24
[4]conststr_stats: Memory: 534
global_state='(nodes: (  ( OUT: ( "test1/b.test" ) ,REC:"run make_b",exit_code:"0",id:"1" ) , ( OUT: ( "test1/c.test" ) ,DEP: ( "test1/b.test" ) ,REC:"run make_c",exit_code:"1",id:"2" ) , ( DEP: ( "test1/b.test","test1/c.test" ) ,REC:"verify",exit_code:"1",id:"3" )  ) ,loop_count:"2")'
nr_jobs=1
IN=()
OUT=(test1/c.test )
run make_c
store-result 2 $?

exit_codes: 2 0
[4]main: error codes: 2
[4]main: error codes: 0
[4]apply_named_rule: loop_count 3
[4]prepare_nodes: update nodes and cache
[4]prepare_nodes: set exit code 0 on node 2
[4]find_nodes: todo node nr:2
[4]export_bash_command: starting 1 jobs
[4]export_bash_command: verify
[4]update_checksum_file: test1/c.test:Mon Jun  3 17:54:14 2024

[4]conststr_stats: Count: 24
[4]conststr_stats: Memory: 534
global_state='(nodes: (  ( OUT: ( "test1/b.test" ) ,REC:"run make_b",exit_code:"0",id:"1" ) , ( OUT: ( "test1/c.test" ) ,DEP: ( "test1/b.test" ) ,REC:"run make_c",exit_code:"0",id:"2" ) , ( DEP: ( "test1/b.test","test1/c.test" ) ,REC:"verify",exit_code:"1",id:"3" )  ) ,loop_count:"3")'
nr_jobs=1
IN=()
OUT=()
verify
store-result 3 $?

exit_codes: 3 0
[4]main: error codes: 3
[4]main: error codes: 0
[4]apply_named_rule: loop_count 4
[4]prepare_nodes: update nodes and cache
[4]prepare_nodes: set exit code 0 on node 3
[4]export_bash_command: starting 0 jobs
[4]conststr_stats: Count: 25
[4]conststr_stats: Memory: 552
global_state='(nodes: (  ( OUT: ( "test1/b.test" ) ,REC:"run make_b",exit_code:"0",id:"1" ) , ( OUT: ( "test1/c.test" ) ,DEP: ( "test1/b.test" ) ,REC:"run make_c",exit_code:"0",id:"2" ) , ( DEP: ( "test1/b.test","test1/c.test" ) ,REC:"verify",exit_code:"0",id:"3" )  ) ,loop_count:"4")'
nr_jobs=0
[4]apply_named_rule: loop_count 5
[4]prepare_nodes: update nodes and cache
[4]export_bash_command: starting 0 jobs
[4]conststr_stats: Count: 26
[4]conststr_stats: Memory: 570
global_state='(nodes: (  ( OUT: ( "test1/b.test" ) ,REC:"run make_b",exit_code:"0",id:"1" ) , ( OUT: ( "test1/c.test" ) ,DEP: ( "test1/b.test" ) ,REC:"run make_c",exit_code:"0",id:"2" ) , ( DEP: ( "test1/b.test","test1/c.test" ) ,REC:"verify",exit_code:"0",id:"3" )  ) ,loop_count:"5")'
nr_jobs=0
[4]apply_named_rule: loop_count 1
[4]prepare_nodes: update nodes and cache
[4]find_nodes: todo node nr:0
[4]export_bash_command: starting 1 jobs
[4]export_bash_command: run make_exec2 1
[4]conststr_stats: Count: 18
[4]conststr_stats: Memory: 396
global_state='(nodes: (  ( REC:"run make_exec2 1",exit_code:"1",id:"1" )  ) ,loop_count:"1")'
nr_jobs=1
IN=()
OUT=()
run make_exec2 1
store-result 1 $?

exit_codes: 1 1
[4]main: error codes: 1
[4]main: error codes: 1
[4]apply_named_rule: loop_count 2
[4]prepare_nodes: update nodes and cache
[4]prepare_nodes: set exit code 1 on node 1
[4]find_nodes: todo node nr:0
[4]export_bash_command: starting 1 jobs
[4]export_bash_command: run make_exec2 1
[4]conststr_stats: Count: 19
[4]conststr_stats: Memory: 414
global_state='(nodes: (  ( REC:"run make_exec2 1",exit_code:"1",id:"1" )  ) ,loop_count:"2")'
nr_jobs=1
IN=()
OUT=()
run make_exec2 1
store-result 1 $?

exit_codes: 1 0
[4]main: error codes: 1
[4]main: error codes: 0
[4]apply_named_rule: loop_count 3
[4]prepare_nodes: update nodes and cache
[4]prepare_nodes: set exit code 0 on node 1
[4]export_bash_command: starting 0 jobs
[4]conststr_stats: Count: 20
[4]conststr_stats: Memory: 432
global_state='(nodes: (  ( REC:"run make_exec2 1",exit_code:"0",id:"1" )  ) ,loop_count:"3")'
nr_jobs=0
[4]apply_named_rule: loop_count 1
[4]prepare_nodes: update nodes and cache
[4]find_nodes: todo node nr:0
[4]find_nodes: todo node nr:1
[4]export_bash_command: starting 2 jobs
[4]export_bash_command: run make_exec2 1
[4]export_bash_command: run make_exec2 2
[4]conststr_stats: Count: 20
[4]conststr_stats: Memory: 447
global_state='(nodes: (  ( REC:"run make_exec2 1",exit_code:"1",id:"1" ) , ( REC:"run make_exec2 2",exit_code:"1",id:"2" )  ) ,loop_count:"1")'
nr_jobs=2
IN=()
OUT=()
run make_exec2 1
store-result 1 $?

IN=()
OUT=()
run make_exec2 2
store-result 2 $?

exit_codes: 1 1 2 1
[4]main: error codes: 1
[4]main: error codes: 1
[4]main: error codes: 2
[4]main: error codes: 1
[4]apply_named_rule: loop_count 2
[4]prepare_nodes: update nodes and cache
[4]prepare_nodes: set exit code 1 on node 1
[4]prepare_nodes: set exit code 1 on node 2
[4]find_nodes: todo node nr:0
[4]find_nodes: todo node nr:1
[4]export_bash_command: starting 2 jobs
[4]export_bash_command: run make_exec2 1
[4]export_bash_command: run make_exec2 2
[4]conststr_stats: Count: 20
[4]conststr_stats: Memory: 447
global_state='(nodes: (  ( REC:"run make_exec2 1",exit_code:"1",id:"1" ) , ( REC:"run make_exec2 2",exit_code:"1",id:"2" )  ) ,loop_count:"2")'
nr_jobs=2
IN=()
OUT=()
run make_exec2 1
store-result 1 $?

IN=()
OUT=()
run make_exec2 2
store-result 2 $?

exit_codes: 1 0 2 0
[4]main: error codes: 1
[4]main: error codes: 0
[4]main: error codes: 2
[4]main: error codes: 0
[4]apply_named_rule: loop_count 3
[4]prepare_nodes: update nodes and cache
[4]prepare_nodes: set exit code 0 on node 1
[4]prepare_nodes: set exit code 0 on node 2
[4]export_bash_command: starting 0 jobs
[4]conststr_stats: Count: 21
[4]conststr_stats: Memory: 465
global_state='(nodes: (  ( REC:"run make_exec2 1",exit_code:"0",id:"1" ) , ( REC:"run make_exec2 2",exit_code:"0",id:"2" )  ) ,loop_count:"3")'
nr_jobs=0
[4]apply_named_rule: loop_count 1
[4]prepare_nodes: update nodes and cache
[4]filesunchanged_checksum: changed: phony
[4]filesunchanged_checksum: changed: phony
[4]find_nodes: todo node nr:0
[4]find_nodes: todo node nr:1
[4]export_bash_command: starting 2 jobs
[4]export_bash_command: run showname 
[4]export_bash_command: run showname 
[4]conststr_stats: Count: 26
[4]conststr_stats: Memory: 566
global_state='(nodes: (  ( OUT: ( "phony" ) ,REC:"run showname ",exit_code:"1",id:"1" ) , ( OUT: ( "prepare" ) ,REC:"run showname ",exit_code:"1",id:"2" ) , ( IN: ( "phony" ) ,OUT: ( "dep2" ) ,REC:"run  showname ",exit_code:"1",id:"3" ) , ( IN: ( "phony","dep2" ) ,OUT: ( "dep3" ) ,REC:"run  showname ",exit_code:"1",id:"4" )  ) ,loop_count:"1")'
nr_jobs=2
IN=()
OUT=(phony )
run showname 
store-result 1 $?

IN=()
OUT=(prepare )
run showname 
store-result 2 $?

exit_codes: 1 0 2 0
[4]main: error codes: 1
[4]main: error codes: 0
[4]main: error codes: 2
[4]main: error codes: 0
[4]apply_named_rule: loop_count 2
[4]prepare_nodes: update nodes and cache
[4]prepare_nodes: set exit code 0 on node 1
[4]prepare_nodes: set exit code 0 on node 2
[4]filesunchanged_checksum: changed: phony
[4]filesunchanged_checksum: changed: phony
[4]find_nodes: todo node nr:2
[4]export_bash_command: starting 1 jobs
[4]export_bash_command: run  showname 
[4]conststr_stats: Count: 26
[4]conststr_stats: Memory: 566
global_state='(nodes: (  ( OUT: ( "phony" ) ,REC:"run showname ",exit_code:"0",id:"1" ) , ( OUT: ( "prepare" ) ,REC:"run showname ",exit_code:"0",id:"2" ) , ( IN: ( "phony" ) ,OUT: ( "dep2" ) ,REC:"run  showname ",exit_code:"1",id:"3" ) , ( IN: ( "phony","dep2" ) ,OUT: ( "dep3" ) ,REC:"run  showname ",exit_code:"1",id:"4" )  ) ,loop_count:"2")'
nr_jobs=1
IN=(phony )
OUT=(dep2 )
run  showname 
store-result 3 $?

exit_codes: 3 0
[4]main: error codes: 3
[4]main: error codes: 0
[4]apply_named_rule: loop_count 3
[4]prepare_nodes: update nodes and cache
[4]prepare_nodes: set exit code 0 on node 3
[4]filesunchanged_checksum: changed: phony
[4]find_nodes: todo node nr:3
[4]export_bash_command: starting 1 jobs
[4]export_bash_command: run  showname 
[4]conststr_stats: Count: 26
[4]conststr_stats: Memory: 566
global_state='(nodes: (  ( OUT: ( "phony" ) ,REC:"run showname ",exit_code:"0",id:"1" ) , ( OUT: ( "prepare" ) ,REC:"run showname ",exit_code:"0",id:"2" ) , ( IN: ( "phony" ) ,OUT: ( "dep2" ) ,REC:"run  showname ",exit_code:"0",id:"3" ) , ( IN: ( "phony","dep2" ) ,OUT: ( "dep3" ) ,REC:"run  showname ",exit_code:"1",id:"4" )  ) ,loop_count:"3")'
nr_jobs=1
IN=(phony dep2 )
OUT=(dep3 )
run  showname 
store-result 4 $?

exit_codes: 4 0
[4]main: error codes: 4
[4]main: error codes: 0
[4]apply_named_rule: loop_count 4
[4]prepare_nodes: update nodes and cache
[4]prepare_nodes: set exit code 0 on node 4
[4]export_bash_command: starting 0 jobs
[4]conststr_stats: Count: 26
[4]conststr_stats: Memory: 566
global_state='(nodes: (  ( OUT: ( "phony" ) ,REC:"run showname ",exit_code:"0",id:"1" ) , ( OUT: ( "prepare" ) ,REC:"run showname ",exit_code:"0",id:"2" ) , ( IN: ( "phony" ) ,OUT: ( "dep2" ) ,REC:"run  showname ",exit_code:"0",id:"3" ) , ( IN: ( "phony","dep2" ) ,OUT: ( "dep3" ) ,REC:"run  showname ",exit_code:"0",id:"4" )  ) ,loop_count:"4")'
nr_jobs=0
