( 
gen-node: 'run ccompile_build:conststr.o:conststr.c conststr.h',

nodes: (

(
     IN: ( 'njson_parse.tab.c', 'njson_lex.lex.c', 'njson_read.c', 'njson_read_test.c' , '../lib/mls.c' ),
     OUT: ( 'njson_parse.tab.d' ),
     REC: "run depmake"
),

(
    OUT: ( 'njson_lex.lex.h', 'njson_lex.lex.c' ), 
    IN:  ( 'njson_lex.l' ),
    REC: "run flex_build"
),

(
    OUT: ( 'njson_parse.tab.c', 'njson_parse.tab.h' ),
    IN:  ( 'njson_parse.y' ),
    DEP: ( 'njson_lex.lex.c',  'njson_lex.lex.h' ),
    REC: "run bison_build"
),

(
    OUT:  ( 'njson_read_test' ),
    IN:   ( 'conststr.o','njson_read_test.o', 'njson_parse.tab.o', 'mls.o', 'njson_read.o', 'njson_lex.lex.o' ),
    REC: 'run link_build'
),

(
OUT:  ( 'mls.o' ),
IN:   ( '../lib/mls.c' ),
REC: "run ccompile_build"
),

(
OUT:  ( 'njson_read.o' ),
	IN:   ( 'njson_read.c' ),
    DEP:  ( 'njson_parse.tab.c',  'njson_parse.tab.h',  'njson_lex.lex.c',  'njson_lex.lex.h' ),
REC: "run ccompile_build"
),

(

    OUT:  ( 'njson_read_test.o' ),
    IN:   ( 'njson_read_test.c' ),
    DEP:  ( 'njson_parse.tab.c',  'njson_parse.tab.h',  'njson_lex.lex.c',  'njson_lex.lex.h'  ), 
    REC: "run ccompile_build"
),

(
OUT:  ( 'njson_lex.lex.o' ),
IN:   ( 'njson_lex.lex.c' ),
REC: "run ccompile_build"
),

(
OUT:  ( 'njson_parse.tab.o' ),
IN:   ( 'njson_parse.tab.c' ),
REC: "run ccompile_build"
)
)
)



